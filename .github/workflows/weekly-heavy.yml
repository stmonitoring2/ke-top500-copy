name: Weekly Rebuild (Top 500 ranking)

on:
  schedule:
    # Weekly, Mondays at 09:30 UTC
    - cron: "30 9 * * 1"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ke-top500-weekly
  cancel-in-progress: true

jobs:
  rebuild:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Build the NEW ranking CSV directly into public/
      - name: Build Top 500 ranking (Python) – try discovery, else fallback
        env:
          YT_API_KEY: ${{ secrets.YT_API_KEY }}
        run: |
          set -e
          python scripts/build_ke_top500.py --out public/top500_ranked.csv --max_new 1500 --discover true || \
          python scripts/build_ke_top500.py --out public/top500_ranked.csv --discover false
          echo "---- public/top500_ranked.csv (head) ----"
          (head -n 5 public/top500_ranked.csv || true)

      # Convert FROM public/top500_ranked.csv (keep sources consistent)
      - name: Convert to channels.csv
        run: |
          python scripts/make_channels_csv.py --ranked public/top500_ranked.csv --out channels.csv
          echo "---- channels.csv (head) ----"
          (head -n 5 channels.csv || true)

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Node deps
        run: npm ci || npm i

      # Refresh latest videos JSON for the site (hybrid = RSS first, API fallback if needed)
      - name: Refresh latest videos (Hybrid:RSS + API fallback)
        env:
          YT_API_KEY: ${{ secrets.YT_API_KEY }}
        run: node scripts/fetch_latest_top500_hybrid.js ./channels.csv ./public/data/top500.json

      - name: Commit updated artifacts (commit → rebase → push)
        run: |
          set -e
          git config user.name "auto-bot"
          git config user.email "bot@example.com"

          # Stage artifacts
          git add public/top500_ranked.csv public/data/top500.json channels.csv discovered_ids.json || true
          git commit -m "chore: weekly rebuild + refresh [skip ci]" || echo "No changes"

          # Rebase on the latest main and push back to THIS repo
          git fetch origin main
          git pull --rebase --autostash origin main || {
            git stash push -u -m "bot-stash" || true
            git pull --rebase origin main
            git stash pop || true
          }

          # Push to the current repository (prevents 403s on copies/forks)
          git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
          git push origin HEAD:main

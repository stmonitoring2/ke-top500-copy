name: Daily Refresh (RSS, history, rollups)

on:
  schedule:
    # 00:30 UTC daily (≈ 03:30 EAT)
    - cron: "30 0 * * *"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ke-top500-daily
  cancel-in-progress: true

jobs:
  refresh:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Node deps
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      - name: Ensure channels.csv
        shell: bash
        run: |
          set -e
          if [ -f channels.csv ]; then
            echo "channels.csv present"
          elif [ -f public/top500_ranked.csv ]; then
            python scripts/make_channels_csv.py --ranked public/top500_ranked.csv --out channels.csv
          elif [ -f top500_ranked.csv ]; then
            echo "Using legacy root/top500_ranked.csv"
            python scripts/make_channels_csv.py --ranked top500_ranked.csv --out channels.csv
          elif [ -f scripts/seed_channel_ids.txt ]; then
            awk 'BEGIN{print "rank,channel_id,channel_name"} {print NR "," $1 ",Seed Channel " NR}' scripts/seed_channel_ids.txt > channels.csv
            echo "Created channels.csv from seeds"
          else
            echo "ERROR: No channels.csv/top500_ranked.csv/seed_channel_ids.txt"
            exit 1
          fi
          echo "---- channels.csv (first 5 lines) ----"
          head -n 5 channels.csv || true

      - name: Ensure public/data folder
        run: mkdir -p public/data

      - name: Refresh latest videos (Hybrid:RSS + API fallback)
        env:
          YT_API_KEY: ${{ secrets.YT_API_KEY }}
        run: node scripts/fetch_latest_top500_hybrid.js ./channels.csv ./public/data/top500.json

      - name: Append history snapshot
        run: node scripts/append_history.js

      - name: Build 7d & 30d rollups
        run: |
          node scripts/make_rollups_from_history.js 7 public/data/top500_7d.json
          node scripts/make_rollups_from_history.js 30 public/data/top500_30d.json

      - name: Commit updated artifacts (commit → rebase → push)
        run: |
          set -e
          git config user.name "auto-bot"
          git config user.email "bot@example.com"

          git add public/data/top500.json public/data/history.jsonl public/data/top500_7d.json public/data/top500_30d.json || true
          git commit -m "chore: daily refresh + history + rollups [skip ci]" || echo "No changes"

          git fetch origin main
          git pull --rebase --autostash origin main || {
            git stash push -u -m "bot-stash" || true
            git pull --rebase origin main
            git stash pop || true
          }

          git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
          git push origin HEAD:main
